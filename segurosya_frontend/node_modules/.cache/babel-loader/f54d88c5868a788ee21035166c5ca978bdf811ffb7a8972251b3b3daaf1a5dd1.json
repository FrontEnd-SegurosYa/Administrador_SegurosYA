{"ast":null,"code":"var _jsxFileName = \"D:\\\\PUCP\\\\Ing Soft\\\\Administrador_SegurosYA\\\\segurosya_frontend\\\\src\\\\componentes\\\\gestionListaNegra\\\\GestionClientesEspeciales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GestionClientesEspeciales.css';\nimport '../../index.css';\nimport { obtenerClientesEspeciales, dividirPaginas, cargaMasivaPrueba, cargaMasivaClientesEspeciales } from './funcionesExtras';\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion';\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_LINEAS_POR_PAGINA = 15;\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\nfunction GestionClientesEspeciales() {\n  _s();\n  const [listaClientesEspecialesSeleccionados, setListaClientesEspeciales] = useState([]);\n  const [listaPaginas, setListaPaginas] = useState([[]]);\n  const [indicePagina, setIndicePagina] = useState(0);\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\n  const [clientesEspecialesSeleccionados, setClientesEspecialesSeleccionados] = useState([]);\n  const [actualizarLista, setActualizarLista] = useState(false);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const seleccionClienteEspecial = idClienteEspecial => {\n    if (clientesEspecialesSeleccionados.includes(idClienteEspecial)) {\n      setClientesEspecialesSeleccionados(clientesEspecialesSeleccionados.filter(id => id !== idClienteEspecial));\n    } else {\n      setClientesEspecialesSeleccionados([...clientesEspecialesSeleccionados, idClienteEspecial]);\n    }\n  };\n  const cabeceraTabla = [\"\", \"Tipo Documento\", \"Numero Documento\", \"Nombre Completo\", \"Motivo\", \"Acciones\"];\n  const cambioIndice = event => {\n    const value = parseInt(event.target.value);\n    setIndicePagina(value);\n  };\n  useEffect(() => {\n    obtenerClientesEspeciales().then(data => {\n      setListaClientesEspeciales(data);\n      const paginas = dividirPaginas(data, cantidadLineas);\n      setListaPaginas(paginas);\n      if (indicePagina >= paginas.length) {\n        setIndicePagina(paginas.length - 1);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // Restablecer el valor de actualizarLista después de la actualización\n    if (actualizarLista) {\n      setActualizarLista(false);\n    }\n  }, [cantidadLineas, indicePagina, actualizarLista]);\n  const handlePageChange = pageNumber => {\n    setIndicePagina(pageNumber - 1);\n  };\n  const cambioCantidadLineas = event => {\n    const value = parseInt(event.target.value);\n    const maxLineas = Math.min(value, 15);\n    setCantidadLineas(maxLineas);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ContenedorGestionClientes\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"TablaCLientes\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: cabeceraTabla.map(cabecera => /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"CabeceraTitulo\",\n              children: cabecera\n            }, cabecera, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listaPaginas[indicePagina].slice(0, cantidadLineas).map(clienteEspecial => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: clientesEspecialesSeleccionados.includes(clienteEspecial.numDoc),\n                onChange: () => seleccionClienteEspecial(clienteEspecial.numDoc)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, cabeceraTabla[0], false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", clienteEspecial.tipoDoc, \" \"]\n            }, cabeceraTabla[1], true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", clienteEspecial.numDoc, \" \"]\n            }, cabeceraTabla[2], true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", clienteEspecial.nombre + \" \" + clienteEspecial.apellidoPaterno + \" \" + clienteEspecial.apellidoMaterno, \" \"]\n            }, cabeceraTabla[3], true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", clienteEspecial.motivo, \" \"]\n            }, cabeceraTabla[4], true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 44\n              }, this)\n            }, cabeceraTabla[5], false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, clienteEspecial.numDoc, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotonesYPaginacionEstandar, {\n        cantidadLineas: cantidadLineas,\n        cambioCantidadLineas: cambioCantidadLineas,\n        indicePagina: indicePagina,\n        handlePageChange: handlePageChange,\n        handleFileUpload: cargaMasiva,\n        listaPaginas: listaPaginas,\n        listaClientes: listaClientesEspecialesSeleccionados,\n        clientesSeleccionados: clientesEspecialesSeleccionados,\n        setClientesSeleccionados: setClientesEspecialesSeleccionados,\n        actualizarLista: actualizarLista,\n        setActualizarLista: setActualizarLista,\n        mostrarModal: mostrarModal,\n        setMostrarModal: setMostrarModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(GestionClientesEspeciales, \"NpW9vOqHYU4BwR43VONALQxAiSU=\");\n_c = GestionClientesEspeciales;\nexport default GestionClientesEspeciales;\nvar _c;\n$RefreshReg$(_c, \"GestionClientesEspeciales\");","map":{"version":3,"names":["React","useState","useEffect","obtenerClientesEspeciales","dividirPaginas","cargaMasivaPrueba","cargaMasivaClientesEspeciales","BotonesPaginacion","BotonesYPaginacionEstandar","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_LINEAS_POR_PAGINA","CANTIDAD_LINEAS_POR_DEFECTO","GestionClientesEspeciales","_s","listaClientesEspecialesSeleccionados","setListaClientesEspeciales","listaPaginas","setListaPaginas","indicePagina","setIndicePagina","cantidadLineas","setCantidadLineas","clientesEspecialesSeleccionados","setClientesEspecialesSeleccionados","actualizarLista","setActualizarLista","mostrarModal","setMostrarModal","seleccionClienteEspecial","idClienteEspecial","includes","filter","id","cabeceraTabla","cambioIndice","event","value","parseInt","target","then","data","paginas","length","catch","error","console","handlePageChange","pageNumber","cambioCantidadLineas","maxLineas","Math","min","children","map","cabecera","fileName","_jsxFileName","lineNumber","columnNumber","slice","clienteEspecial","type","checked","numDoc","onChange","tipoDoc","nombre","apellidoPaterno","apellidoMaterno","motivo","handleFileUpload","cargaMasiva","listaClientes","clientesSeleccionados","setClientesSeleccionados","_c","$RefreshReg$"],"sources":["D:/PUCP/Ing Soft/Administrador_SegurosYA/segurosya_frontend/src/componentes/gestionListaNegra/GestionClientesEspeciales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GestionClientesEspeciales.css';\r\nimport '../../index.css';\r\nimport { obtenerClientesEspeciales, dividirPaginas,cargaMasivaPrueba, cargaMasivaClientesEspeciales } from './funcionesExtras';\r\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion'\r\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar'\r\n\r\n\r\nconst MAX_LINEAS_POR_PAGINA = 15;\r\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\r\n\r\nfunction GestionClientesEspeciales() {\r\n  const [listaClientesEspecialesSeleccionados, setListaClientesEspeciales] = useState([]);\r\n  const [listaPaginas, setListaPaginas] = useState([[]]);\r\n  const [indicePagina, setIndicePagina] = useState(0);\r\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\r\n  const [clientesEspecialesSeleccionados, setClientesEspecialesSeleccionados] = useState([]);\r\n\r\n  const [actualizarLista, setActualizarLista] = useState(false);\r\n  const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n\r\n\r\n\r\n  const seleccionClienteEspecial = (idClienteEspecial) => {\r\n    if (clientesEspecialesSeleccionados.includes(idClienteEspecial)) {\r\n      setClientesEspecialesSeleccionados(clientesEspecialesSeleccionados.filter((id) => id !== idClienteEspecial));\r\n    } else {\r\n      setClientesEspecialesSeleccionados([...clientesEspecialesSeleccionados, idClienteEspecial]);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const cabeceraTabla = [\r\n    \"\",\r\n    \"Tipo Documento\",\r\n    \"Numero Documento\",\r\n    \"Nombre Completo\",\r\n    \"Motivo\",\r\n    \"Acciones\"\r\n  ];\r\n\r\n  const cambioIndice = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    setIndicePagina(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    obtenerClientesEspeciales()\r\n      .then((data) => {\r\n        setListaClientesEspeciales(data);\r\n        const paginas = dividirPaginas(data, cantidadLineas);\r\n        setListaPaginas(paginas);\r\n        if (indicePagina >= paginas.length) {\r\n          setIndicePagina(paginas.length - 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  \r\n    // Restablecer el valor de actualizarLista después de la actualización\r\n    if (actualizarLista) {\r\n      setActualizarLista(false);\r\n    }\r\n  }, [cantidadLineas, indicePagina, actualizarLista]);\r\n  \r\n\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setIndicePagina(pageNumber - 1);\r\n  };\r\n\r\n  const cambioCantidadLineas = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    const maxLineas = Math.min(value, 15);\r\n    setCantidadLineas(maxLineas);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id='ContenedorGestionClientes'>\r\n        <table id='TablaCLientes'>      \r\n          <thead>            \r\n            <tr>\r\n              {cabeceraTabla.map(cabecera => \r\n                <td key={cabecera} id='CabeceraTitulo'>{cabecera}</td>\r\n                )}\r\n              \r\n            </tr>              \r\n          </thead>\r\n\r\n          {/* Cuerpo */}\r\n          <tbody>\r\n            {listaPaginas[indicePagina].slice(0, cantidadLineas).map(clienteEspecial => (\r\n              <tr key={clienteEspecial.numDoc}>\r\n                {/* Cabeceras */}\r\n                <td key={cabeceraTabla[0]}>\r\n                  <input\r\n                    type='checkbox'\r\n                    checked={clientesEspecialesSeleccionados.includes(clienteEspecial.numDoc)}\r\n                    onChange={() => seleccionClienteEspecial(clienteEspecial.numDoc)}\r\n                  />\r\n                </td>\r\n                <td key={cabeceraTabla[1]}> {clienteEspecial.tipoDoc} </td>\r\n                <td key={cabeceraTabla[2]}> {clienteEspecial.numDoc} </td>\r\n                <td key={cabeceraTabla[3]}> {clienteEspecial.nombre+\" \"+clienteEspecial.apellidoPaterno+\" \"+clienteEspecial.apellidoMaterno} </td>\r\n                <td key={cabeceraTabla[4]}> {clienteEspecial.motivo} </td>\r\n                <td key={cabeceraTabla[5]}><button>Editar</button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {/*llamamos al componente de abajo (botones y paginacion)*/}\r\n        <BotonesYPaginacionEstandar\r\n          cantidadLineas={cantidadLineas}\r\n          cambioCantidadLineas={cambioCantidadLineas}\r\n          indicePagina={indicePagina}\r\n          handlePageChange={handlePageChange}\r\n          handleFileUpload={cargaMasiva}\r\n          listaPaginas={listaPaginas}\r\n          listaClientes={listaClientesEspecialesSeleccionados}\r\n          clientesSeleccionados={clientesEspecialesSeleccionados}\r\n          setClientesSeleccionados={setClientesEspecialesSeleccionados}\r\n          actualizarLista={actualizarLista}\r\n          setActualizarLista={setActualizarLista}\r\n          mostrarModal={mostrarModal}\r\n          setMostrarModal={setMostrarModal}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GestionClientesEspeciales;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}