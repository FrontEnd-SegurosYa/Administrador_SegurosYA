{"ast":null,"code":"var _jsxFileName = \"D:\\\\PUCP\\\\Ing Soft\\\\Administrador_SegurosYA\\\\segurosya_frontend\\\\src\\\\componentes\\\\gestionClientes\\\\GestionClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GestionClientes.css';\nimport '../../index.css';\nimport { obtenerClientes, dividirPaginas } from './funcionesExtras';\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion';\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_LINEAS_POR_PAGINA = 15;\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\nfunction GestionClientes() {\n  _s();\n  const [listaClientes, setListaClientes] = useState([]);\n  const [listaPaginas, setListaPaginas] = useState([[]]);\n  const [indicePagina, setIndicePagina] = useState(0);\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\n  const [clientesSeleccionados, setClientesSeleccionados] = useState([]);\n  const [actualizarLista, setActualizarLista] = useState(false);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const seleccionCliente = idCliente => {\n    if (clientesSeleccionados.includes(idCliente)) {\n      setClientesSeleccionados(clientesSeleccionados.filter(id => id !== idCliente));\n    } else {\n      setClientesSeleccionados([...clientesSeleccionados, idCliente]);\n    }\n  };\n  const cabeceraTabla = [\"\", \"Codigo\", \"Nombre Completo\", \"DNI\", \"Telefono\", \"Correo\", \"Acciones\"];\n  const cambioIndice = event => {\n    const value = parseInt(event.target.value);\n    setIndicePagina(value);\n  };\n  useEffect(() => {\n    obtenerClientes().then(data => {\n      setListaClientes(data);\n      const paginas = dividirPaginas(data, cantidadLineas);\n      setListaPaginas(paginas);\n      if (indicePagina >= paginas.length) {\n        setIndicePagina(paginas.length - 1);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // Restablecer el valor de actualizarLista después de la actualización\n    if (actualizarLista) {\n      setActualizarLista(false);\n    }\n  }, [cantidadLineas, indicePagina, actualizarLista]);\n  function refrescarPagina() {\n    obtenerClientes().then(data => {\n      setListaClientes(data);\n      const paginas = dividirPaginas(data, cantidadLineas);\n      setListaPaginas(paginas);\n      if (indicePagina >= paginas.length) {\n        setIndicePagina(paginas.length - 1);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  const handlePageChange = pageNumber => {\n    setIndicePagina(pageNumber - 1);\n  };\n  const cambioCantidadLineas = event => {\n    const value = parseInt(event.target.value);\n    const maxLineas = Math.min(value, 15);\n    setCantidadLineas(maxLineas);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ContenedorGestionClientes\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"TablaCLientes\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: cabeceraTabla.map(cabecera => /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"CabeceraTitulo\",\n              children: cabecera\n            }, cabecera, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listaPaginas[indicePagina].slice(0, cantidadLineas).map(cliente => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: clientesSeleccionados.includes(cliente.idCliente),\n                onChange: () => seleccionCliente(cliente.idCliente)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, cabeceraTabla[0], false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cliente.idCliente, \" \"]\n            }, cabeceraTabla[1], true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cliente.nombre + \" \" + cliente.apellidoPaterno + \" \" + cliente.apellidoMaterno, \" \"]\n            }, cabeceraTabla[2], true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cliente.dni, \" \"]\n            }, cabeceraTabla[3], true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cliente.telefono, \" \"]\n            }, cabeceraTabla[4], true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cliente.correo, \" \"]\n            }, cabeceraTabla[5], true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 44\n              }, this)\n            }, cabeceraTabla[6], false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, cliente.idCliente, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotonesPaginacion, {\n        cantidadLineas: cantidadLineas,\n        cambioCantidadLineas: cambioCantidadLineas,\n        indicePagina: indicePagina,\n        handlePageChange: handlePageChange,\n        listaPaginas: listaPaginas,\n        listaClientes: listaClientes,\n        clientesSeleccionados: clientesSeleccionados,\n        setClientesSeleccionados: setClientesSeleccionados,\n        actualizarLista: actualizarLista,\n        setActualizarLista: setActualizarLista,\n        mostrarModal: mostrarModal,\n        setMostrarModal: setMostrarModal\n        //refrescarPagina={refrescarPagina}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(GestionClientes, \"xapk4rQG6qrEjPXdpIJKwA1lew0=\");\n_c = GestionClientes;\nexport default GestionClientes;\nvar _c;\n$RefreshReg$(_c, \"GestionClientes\");","map":{"version":3,"names":["React","useState","useEffect","obtenerClientes","dividirPaginas","BotonesPaginacion","BotonesYPaginacionEstandar","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_LINEAS_POR_PAGINA","CANTIDAD_LINEAS_POR_DEFECTO","GestionClientes","_s","listaClientes","setListaClientes","listaPaginas","setListaPaginas","indicePagina","setIndicePagina","cantidadLineas","setCantidadLineas","clientesSeleccionados","setClientesSeleccionados","actualizarLista","setActualizarLista","mostrarModal","setMostrarModal","seleccionCliente","idCliente","includes","filter","id","cabeceraTabla","cambioIndice","event","value","parseInt","target","then","data","paginas","length","catch","error","console","refrescarPagina","handlePageChange","pageNumber","cambioCantidadLineas","maxLineas","Math","min","children","map","cabecera","fileName","_jsxFileName","lineNumber","columnNumber","slice","cliente","type","checked","onChange","nombre","apellidoPaterno","apellidoMaterno","dni","telefono","correo","_c","$RefreshReg$"],"sources":["D:/PUCP/Ing Soft/Administrador_SegurosYA/segurosya_frontend/src/componentes/gestionClientes/GestionClientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GestionClientes.css';\r\nimport '../../index.css';\r\nimport { obtenerClientes, dividirPaginas } from './funcionesExtras';\r\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion'\r\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar'\r\n\r\n\r\nconst MAX_LINEAS_POR_PAGINA = 15;\r\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\r\n\r\nfunction GestionClientes() {\r\n  const [listaClientes, setListaClientes] = useState([]);\r\n  const [listaPaginas, setListaPaginas] = useState([[]]);\r\n  const [indicePagina, setIndicePagina] = useState(0);\r\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\r\n  const [clientesSeleccionados, setClientesSeleccionados] = useState([]);\r\n\r\n  const [actualizarLista, setActualizarLista] = useState(false);\r\n  const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n\r\n\r\n\r\n  const seleccionCliente = (idCliente) => {\r\n    if (clientesSeleccionados.includes(idCliente)) {\r\n      setClientesSeleccionados(clientesSeleccionados.filter((id) => id !== idCliente));\r\n    } else {\r\n      setClientesSeleccionados([...clientesSeleccionados, idCliente]);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const cabeceraTabla = [\r\n    \"\",\r\n    \"Codigo\",\r\n    \"Nombre Completo\",\r\n    \"DNI\",\r\n    \"Telefono\",\r\n    \"Correo\",\r\n    \"Acciones\"\r\n  ];\r\n\r\n  const cambioIndice = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    setIndicePagina(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    obtenerClientes()\r\n      .then((data) => {\r\n        setListaClientes(data);\r\n        const paginas = dividirPaginas(data, cantidadLineas);\r\n        setListaPaginas(paginas);\r\n        if (indicePagina >= paginas.length) {\r\n          setIndicePagina(paginas.length - 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  \r\n    // Restablecer el valor de actualizarLista después de la actualización\r\n    if (actualizarLista) {\r\n      setActualizarLista(false);\r\n    }\r\n  }, [cantidadLineas, indicePagina, actualizarLista]);\r\n  \r\n  function refrescarPagina () {\r\n    obtenerClientes()\r\n      .then((data) => {\r\n        setListaClientes(data);\r\n        const paginas = dividirPaginas(data, cantidadLineas);\r\n        setListaPaginas(paginas);\r\n        if (indicePagina >= paginas.length) {\r\n          setIndicePagina(paginas.length - 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setIndicePagina(pageNumber - 1);\r\n  };\r\n\r\n  const cambioCantidadLineas = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    const maxLineas = Math.min(value, 15);\r\n    setCantidadLineas(maxLineas);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id='ContenedorGestionClientes'>\r\n        <table id='TablaCLientes'>      \r\n          <thead>            \r\n            <tr>\r\n              {cabeceraTabla.map(cabecera => \r\n                <td key={cabecera} id='CabeceraTitulo'>{cabecera}</td>\r\n                )}\r\n              \r\n            </tr>              \r\n          </thead>\r\n\r\n          {/* Cuerpo */}\r\n          <tbody>\r\n            {listaPaginas[indicePagina].slice(0, cantidadLineas).map(cliente => (\r\n              <tr key={cliente.idCliente}>\r\n                {/* Cabeceras */}\r\n                <td key={cabeceraTabla[0]}>\r\n                  <input\r\n                    type='checkbox'\r\n                    checked={clientesSeleccionados.includes(cliente.idCliente)}\r\n                    onChange={() => seleccionCliente(cliente.idCliente)}\r\n                  />\r\n                </td>\r\n                <td key={cabeceraTabla[1]}> {cliente.idCliente} </td>\r\n                <td key={cabeceraTabla[2]}> {cliente.nombre + \" \" + cliente.apellidoPaterno + \" \" + cliente.apellidoMaterno} </td>\r\n                <td key={cabeceraTabla[3]}> {cliente.dni} </td>\r\n                <td key={cabeceraTabla[4]}> {cliente.telefono} </td>\r\n                <td key={cabeceraTabla[5]}> {cliente.correo} </td>\r\n                <td key={cabeceraTabla[6]}><button>Editar</button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {/*llamamos al componente de abajo (botones y paginacion)*/}\r\n        <BotonesPaginacion\r\n          cantidadLineas={cantidadLineas}\r\n          cambioCantidadLineas={cambioCantidadLineas}\r\n          indicePagina={indicePagina}\r\n          handlePageChange={handlePageChange}\r\n          listaPaginas={listaPaginas}\r\n          listaClientes={listaClientes}\r\n          clientesSeleccionados={clientesSeleccionados}\r\n          setClientesSeleccionados={setClientesSeleccionados}\r\n          actualizarLista={actualizarLista}\r\n          setActualizarLista={setActualizarLista}\r\n          mostrarModal={mostrarModal}\r\n          setMostrarModal={setMostrarModal}\r\n          //refrescarPagina={refrescarPagina}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GestionClientes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}