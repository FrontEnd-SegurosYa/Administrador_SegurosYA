{"ast":null,"code":"var _jsxFileName = \"D:\\\\PUCP\\\\Ing Soft\\\\Administrador_SegurosYA\\\\segurosya_frontend\\\\src\\\\componentes\\\\gestionPolizas\\\\GestionPolizas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GestionPolizas.css';\nimport '../../index.css';\nimport { obtenerClientes, dividirPaginas, obtenerPolizas, eliminarPoliza } from './funcionesExtras';\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion';\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar';\nimport { cargaMasivaPrueba } from '../componenteAbajoAdmin/funcionesExtras';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_LINEAS_POR_PAGINA = 15;\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\nfunction GestionPolizas() {\n  _s();\n  const [listaPolizas, setListaPolizas] = useState([]);\n  const [listaPaginas, setListaPaginas] = useState([[]]);\n  const [indicePagina, setIndicePagina] = useState(0);\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\n  const [polizasSeleccionadas, setPolizasSeleccionadas] = useState([]);\n  const [actualizarLista, setActualizarLista] = useState(false);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const seleccionPoliza = idPoliza => {\n    if (polizasSeleccionadas.includes(idPoliza)) {\n      setPolizasSeleccionadas(polizasSeleccionadas.filter(id => id !== idPoliza));\n    } else {\n      setPolizasSeleccionadas([...polizasSeleccionadas, idPoliza]);\n    }\n  };\n  const cabeceraTabla = [\"\", \"Codigo\", \"Nombre Completo\", \"Plan\", \"Fecha Inicio - Fin\", \"SOAT\", \"Acciones\"];\n  const cambioIndice = event => {\n    const value = parseInt(event.target.value);\n    setIndicePagina(value);\n  };\n  useEffect(() => {\n    obtenerPolizas().then(data => {\n      // console.log(data);\n      setListaPolizas(data);\n      const paginas = dividirPaginas(data, cantidadLineas);\n      setListaPaginas(paginas);\n      if (indicePagina >= paginas.length) {\n        setIndicePagina(paginas.length - 1);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // Restablecer el valor de actualizarLista después de la actualización\n    if (actualizarLista) {\n      setActualizarLista(false);\n    }\n  }, [cantidadLineas, indicePagina, actualizarLista]);\n  const handlePageChange = pageNumber => {\n    setIndicePagina(pageNumber - 1);\n  };\n  const cambioCantidadLineas = event => {\n    const value = parseInt(event.target.value);\n    const maxLineas = Math.min(value, 15);\n    setCantidadLineas(maxLineas);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ContenedorGestionClientes\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"TablaCLientes\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: cabeceraTabla.map(cabecera => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cabecera\n            }, cabecera, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listaPaginas[indicePagina].slice(0, cantidadLineas).map(poliza => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: polizasSeleccionadas.includes(poliza.idPoliza),\n                onChange: () => seleccionPoliza(poliza.idPoliza)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, cabeceraTabla[0], false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", poliza.idPoliza, \" \"]\n            }, cabeceraTabla[1], true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", poliza.cliente_nombre + \" \" + poliza.cliente_apellidoPaterno + \" \" + poliza.cliente_apellidoMaterno, \" \"]\n            }, cabeceraTabla[2], true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", poliza.plan_nombre, \" \"]\n            }, cabeceraTabla[3], true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", poliza.fechaInicio.slice(0, 10) + \"  -  \" + poliza.fechaFin.slice(0, 10), \" \"]\n            }, cabeceraTabla[4], true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" linkDefault \"\n            }, cabeceraTabla[5], false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 44\n              }, this)\n            }, cabeceraTabla[6], false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, poliza.idPoliza, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotonesYPaginacionEstandar, {\n        cantidadLineas: cantidadLineas,\n        cambioCantidadLineas: cambioCantidadLineas,\n        indicePagina: indicePagina,\n        handlePageChange: handlePageChange,\n        handleFileUpload: cargaMasivaPrueba,\n        listaPaginas: listaPaginas,\n        listaObjetos: listaPolizas,\n        objetosSeleccionados: polizasSeleccionadas,\n        setObjetosSeleccionados: setPolizasSeleccionadas,\n        actualizarLista: actualizarLista,\n        setActualizarLista: setActualizarLista,\n        mostrarModal: mostrarModal,\n        setMostrarModal: setMostrarModal,\n        eliminarObjeto: eliminarPoliza,\n        nombreObjeto: \"Poliza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(GestionPolizas, \"Kr3lo0ytTjTr3O/L3ZlKghIlwMA=\");\n_c = GestionPolizas;\nexport default GestionPolizas;\nvar _c;\n$RefreshReg$(_c, \"GestionPolizas\");","map":{"version":3,"names":["React","useState","useEffect","obtenerClientes","dividirPaginas","obtenerPolizas","eliminarPoliza","BotonesPaginacion","BotonesYPaginacionEstandar","cargaMasivaPrueba","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_LINEAS_POR_PAGINA","CANTIDAD_LINEAS_POR_DEFECTO","GestionPolizas","_s","listaPolizas","setListaPolizas","listaPaginas","setListaPaginas","indicePagina","setIndicePagina","cantidadLineas","setCantidadLineas","polizasSeleccionadas","setPolizasSeleccionadas","actualizarLista","setActualizarLista","mostrarModal","setMostrarModal","seleccionPoliza","idPoliza","includes","filter","id","cabeceraTabla","cambioIndice","event","value","parseInt","target","then","data","paginas","length","catch","error","console","handlePageChange","pageNumber","cambioCantidadLineas","maxLineas","Math","min","children","map","cabecera","fileName","_jsxFileName","lineNumber","columnNumber","slice","poliza","type","checked","onChange","cliente_nombre","cliente_apellidoPaterno","cliente_apellidoMaterno","plan_nombre","fechaInicio","fechaFin","handleFileUpload","listaObjetos","objetosSeleccionados","setObjetosSeleccionados","eliminarObjeto","nombreObjeto","_c","$RefreshReg$"],"sources":["D:/PUCP/Ing Soft/Administrador_SegurosYA/segurosya_frontend/src/componentes/gestionPolizas/GestionPolizas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GestionPolizas.css';\r\nimport '../../index.css';\r\nimport { obtenerClientes, dividirPaginas, obtenerPolizas, eliminarPoliza } from './funcionesExtras';\r\nimport BotonesPaginacion from '../componenteAbajoAdmin/BotonesYPaginacion'\r\nimport BotonesYPaginacionEstandar from '../componenteAbajoAdmin/BotonesYPaginacionEstandar'\r\nimport { cargaMasivaPrueba } from '../componenteAbajoAdmin/funcionesExtras';\r\n\r\n\r\nconst MAX_LINEAS_POR_PAGINA = 15;\r\nconst CANTIDAD_LINEAS_POR_DEFECTO = 10;\r\n\r\nfunction GestionPolizas() {\r\n  const [listaPolizas, setListaPolizas] = useState([]);\r\n  const [listaPaginas, setListaPaginas] = useState([[]]);\r\n  const [indicePagina, setIndicePagina] = useState(0);\r\n  const [cantidadLineas, setCantidadLineas] = useState(CANTIDAD_LINEAS_POR_DEFECTO);\r\n  const [polizasSeleccionadas, setPolizasSeleccionadas] = useState([]);\r\n\r\n  const [actualizarLista, setActualizarLista] = useState(false);\r\n  const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n\r\n\r\n\r\n  const seleccionPoliza = (idPoliza) => {\r\n    if (polizasSeleccionadas.includes(idPoliza)) {\r\n      setPolizasSeleccionadas(polizasSeleccionadas.filter((id) => id !== idPoliza));\r\n    } else {\r\n      setPolizasSeleccionadas([...polizasSeleccionadas, idPoliza]);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const cabeceraTabla = [\r\n    \"\",\r\n    \"Codigo\",\r\n    \"Nombre Completo\",\r\n    \"Plan\",\r\n    \"Fecha Inicio - Fin\",\r\n    \"SOAT\",\r\n    \"Acciones\"\r\n  ];\r\n\r\n  const cambioIndice = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    setIndicePagina(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    obtenerPolizas()\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setListaPolizas(data);\r\n        const paginas = dividirPaginas(data, cantidadLineas);\r\n        setListaPaginas(paginas);\r\n        if (indicePagina >= paginas.length) {\r\n          setIndicePagina(paginas.length - 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  \r\n    // Restablecer el valor de actualizarLista después de la actualización\r\n    if (actualizarLista) {\r\n      setActualizarLista(false);\r\n    }\r\n  }, [cantidadLineas, indicePagina, actualizarLista]);\r\n  \r\n\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setIndicePagina(pageNumber - 1);\r\n  };\r\n\r\n  const cambioCantidadLineas = (event) => {\r\n    const value = parseInt(event.target.value);\r\n    const maxLineas = Math.min(value, 15);\r\n    setCantidadLineas(maxLineas);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id='ContenedorGestionClientes'>\r\n        <table id='TablaCLientes'>      \r\n          <thead>            \r\n            <tr>\r\n              {cabeceraTabla.map(cabecera => \r\n                <td key={cabecera}>{cabecera}</td>\r\n                )}\r\n              \r\n            </tr>              \r\n          </thead>\r\n\r\n          {/* Cuerpo */}\r\n          <tbody>\r\n            {listaPaginas[indicePagina].slice(0, cantidadLineas).map(poliza => (\r\n              <tr key={poliza.idPoliza}>\r\n                {/* Cabeceras */}\r\n                <td key={cabeceraTabla[0]}>\r\n                  <input\r\n                    type='checkbox'\r\n                    checked={polizasSeleccionadas.includes(poliza.idPoliza)}\r\n                    onChange={() => seleccionPoliza(poliza.idPoliza)}\r\n                  />\r\n                </td>\r\n                <td key={cabeceraTabla[1]}> {poliza.idPoliza} </td>\r\n                <td key={cabeceraTabla[2]}> {poliza.cliente_nombre+\" \"+poliza.cliente_apellidoPaterno+\" \"+poliza.cliente_apellidoMaterno} </td>\r\n                <td key={cabeceraTabla[3]}> {poliza.plan_nombre} </td>\r\n                <td key={cabeceraTabla[4]}> {poliza.fechaInicio.slice(0,10)+\"  -  \"+poliza.fechaFin.slice(0,10)} </td>\r\n                <td key={cabeceraTabla[5]}> linkDefault </td>\r\n                <td key={cabeceraTabla[6]}><button>Editar</button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {/*llamamos al componente de abajo (botones y paginacion)*/}\r\n        <BotonesYPaginacionEstandar\r\n          cantidadLineas={cantidadLineas}\r\n          cambioCantidadLineas={cambioCantidadLineas}\r\n          indicePagina={indicePagina}\r\n          handlePageChange={handlePageChange}\r\n          handleFileUpload={cargaMasivaPrueba}\r\n          listaPaginas={listaPaginas}\r\n          listaObjetos={listaPolizas}\r\n          objetosSeleccionados={polizasSeleccionadas}\r\n          setObjetosSeleccionados={setPolizasSeleccionadas}\r\n          actualizarLista={actualizarLista}\r\n          setActualizarLista={setActualizarLista}\r\n          mostrarModal={mostrarModal}\r\n          setMostrarModal={setMostrarModal}\r\n          eliminarObjeto={eliminarPoliza}\r\n          nombreObjeto={\"Poliza\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GestionPolizas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}